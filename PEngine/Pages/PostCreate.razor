@page "/post/new"
@inject MainLayoutViewModel vm

<div class="post-editor">
    <div class="editor-top">
        <div class="editor-top-row">
            <button class="new-dir">
                <i class="fas fa-folder"></i>
                <p>/</p>
            </button>
        </div>
        <div class="editor-top-row">
            <i class="fas fa-file title-icon"></i>
            <input class="title-input" @oninput="OnTitleChanged" />
        </div>
        <div class="editor-top-row">
            <button class="tool">
                <i class="fas @(true ? "fa-eye" : "fa-eye-slash")"></i>
                <span>@(true ? "Public" : "Private")</span>
            </button>
            <button class="tool">
                <i class="fas @(true ? "fa-unlock" : "fa-lock")"></i>
                <span>@(true ? "Unencrypted" : "Encrypted")</span>
            </button>
            <button class="tool">
                <i class="fas fa-image"></i>
                <span>Upload Image</span>
            </button>
            <button class="tool">
                <i class="fas fa-video"></i>
                <span>Upload Video</span>
            </button>
            <button class="tool">
                <i class="fas fa-upload"></i>
                <span>Upload File</span>
            </button>
            <button class="tool">
                <i class="fas fa-print"></i>
                <span>Preview</span>
            </button>
            <button class="tool">
                <i class="fas fa-floppy-disk"></i>
                <span>Save Post</span>
            </button>
        </div>
    </div>
    
    <StandaloneCodeEditor ConstructionOptions="EditorConstructionOptions" OnDidChangeCursorPosition="OnCursorPositionChanged"/>
</div>

@code
{
    private StandaloneEditorConstructionOptions EditorConstructionOptions(StandaloneCodeEditor editor)
    {
        return new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Theme = "vs-dark",
            Language = "markdown"
        };
    }

    private void OnCursorPositionChanged(CursorPositionChangedEvent e)
    {
        vm.SetStatusbar($"Ln {e.Position.LineNumber}, Col {e.Position.Column}");
    }

    private void OnTitleChanged(ChangeEventArgs e)
    {
        return;
    }
}