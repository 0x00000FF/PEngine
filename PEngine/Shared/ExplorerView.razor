@using PEngine.ComponentModels
@inject ExplorerViewModel vm

<section class="explorer">
    <div class="explorer-header">
        <div></div>
        <div>Title</div>
        <div>Category</div>
        <div>Date Created</div>
        <div>Date Modified</div>
        <div>Author</div>
        <div>Size</div>
    </div>
    @foreach (var item in _containingData) {
        <div class="explorer-item @(item.IsSelected ? "selected" : "")"
             @onclick="() => OnEntryClick?.Invoke(item)"
             @ondblclick="() => OnEntryDblClick?.Invoke(item)">
        <div>
            <input type="checkbox" />
        </div>
        <div><i class="fa-regular fa-file"></i> 제목을 여기에 입력</div>
        <div>카테고리</div>
        <div>@DateTime.Now</div>
        <div>@DateTime.Now</div>
        <div>허강준</div>
        <div>294 KB</div>
    </div>
    }
</section>

@code {
    [Parameter]
    public Action<IExplorerItem>? OnEntryClick { get; set; }

    [Parameter]
    public Action<IExplorerItem>? OnEntryDblClick { get; set; }
    
    private readonly List<IExplorerItem> _containingData;
    private IExplorerItem? _selectedItem = null;
    
    public ExplorerView()
    {
        _containingData = new ();
        
        OnEntryClick += ExplorerViewItemOnClick;
    }

    public async Task Add(IExplorerItem item)
    {
        _containingData.Add(item);
        
        await InvokeAsync(StateHasChanged);
    }

    public async Task AddRange(IEnumerable<IExplorerItem> enumerable)
    {
        _containingData.AddRange(enumerable);
        
        await InvokeAsync(StateHasChanged);
    }

    private void ExplorerViewItemOnClick(IExplorerItem item)
    {
        if (_selectedItem is not null)
        {
            _selectedItem.IsSelected = false;
        }

        item.IsSelected = true;
        _selectedItem = item;
    }

}