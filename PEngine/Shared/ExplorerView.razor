@inject ExplorerViewModel vm

<section class="explorer">
    <div class="explorer-header">
        <div></div>
        <div>Title</div>
        <div>Category</div>
        <div>Date Created</div>
        <div>Date Modified</div>
        <div>Author</div>
        <div>Size</div>
    </div>
    @foreach (var item in ContainingData) {
        <div class="explorer-item @(item.Selected ? "selected" : "")"
             @onclick="() => OnEntryClick?.Invoke(item, null)"
             @ondblclick="() => OnEntryDblClick?.Invoke(item, null)">
        <div>
            <input type="checkbox" />
        </div>
        <div><i class="fa-regular fa-file"></i> 제목을 여기에 입력</div>
        <div>카테고리</div>
        <div>@DateTime.Now</div>
        <div>@DateTime.Now</div>
        <div>허강준</div>
        <div>294 KB</div>
    </div>
    }
</section>

@code {

    [Parameter]
    public EventHandler? OnEntryClick { get; set; }

    [Parameter]
    public EventHandler? OnEntryDblClick { get; set; }

    // TODO: separate ExplorerItem model
    public List<ExplorerItem> ContainingData;
    ExplorerItem? SelectedItem = null;

    public class ExplorerItem
    {
        public bool Selected { get; set; }
    }

    public ExplorerView()
    {
        ContainingData = new ();

        // add sample items 
        for (var i = 0; i < 1024; ++i)
        {
            ContainingData.Add(new());
        }
        
        OnEntryClick += (s, e) =>
        {
            if (SelectedItem is not null)
            {
                SelectedItem.Selected = false;
            }

            (s as ExplorerItem).Selected = true;
            SelectedItem = s as ExplorerItem;
        };
    }

}