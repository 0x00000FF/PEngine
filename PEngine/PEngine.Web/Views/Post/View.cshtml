@model PEngine.Web.Models.ViewModels.PostVM
@{
    ViewBag.Title = Model.Title ?? "Untitled";
    Layout = "_Layout";
}

@section OpenGraph {
    <meta property="og:title" content="@Model.Title" />
    <meta property="og:url" content="/Post/View/@Model.Id" />
    <meta property="og:description" content=""/>
    <meta property="og:site_name" content="Patche's Blog with PEngine" />
    
    <!-- Use if cover exists -->
    @if (Model.Thumbnail is not null)
    {
        <meta property="og:image" content="/Image/Thumbnail/@(Model.Thumbnail)"/>
    }
}

<article>
    <h1 class="article-title">@Model.Title</h1>
    <ul class="metadata">
        <li>
            <i class="fa-solid fa-tag"></i>
            @(Model.Category ?? "Uncategorized")
        </li>
        <li>
            <i class="fa-solid fa-user"></i>
            @Model.WriterName
        </li>
        <li>
            <i class="fa-regular fa-calendar-days"></i>
            @Model.WrittenAt.ToString("yyyy. MM. dd. HH:mm:ss")
        </li>
        <li>
            <i class="fa-solid fa-eye"></i>
            @($"{Model.Hits:N0}") Hit(s)
        </li>
    </ul>
    <div class="article-body">
        @Html.Raw(Model.Content)
    </div>
    
    <div class="article-tail">
        <label class="comment-box-toggle" for="commentBoxToggle">
            <span class="article-tail-label">
                <i class="fa-regular fa-comments"></i>
                <span>0</span> Comments
            </span>
        </label>
        <div class="article-tail-buttons">
            <a class="button dark" asp-controller="Post" asp-action="List">
                <i class="fa fa-list"></i>
                List
            </a>
            
            @if (ViewBag.Authenticated)
            {
                <a class="button dark" asp-controller="Post" asp-action="Modify" asp-route-id="@Model.Id">
                    <i class="fa fa-pencil"></i>
                    Modify
                </a>
                <a class="button crimson" asp-controller="Post" asp-action="Delete" asp-route-id="@Model.Id">
                    <i class="fa fa-trash"></i>
                    Delete
                </a>
            }
        </div>
    </div>
    
    <input type="checkbox" id="commentBoxToggle" />     
        
    <div class="article-tail-collapsible" >
        <form class="comment-form">
            <div class="comment-form-header">
                <input type="text" name="name" placeholder="Name..." required />
                <input type="password" name="password" placeholder="Password..." required />
            </div>
            
            <textarea name="content" placeholder="Still under construction..." required readonly></textarea>
            <input type="submit" value="Save" class="button dark" />            
            @Html.AntiForgeryToken()
        </form>
        <div id="comments"></div>
    </div>
</article>

<script defer>
    (function ($) {
        function handleCommentHeaderButton() {
            const invoker = $(this);
            const [_, event, id] = invoker.id.split('-');
            
            switch (event) {
                case "reply":
                    break;
                case "delete":
                    break;
            }
        }
        
        function refreshComment(id) {
            $.get("/Comment/List/" + id)
            .then(data => {
                $("#comments").html(data);
                $("#comments .comment-header-button").click(handleCommentHeaderButton);
            });   
        }
        
        $(function () {
            // refreshComment(@Model.Id);
        });
    })(jQuery);
</script>